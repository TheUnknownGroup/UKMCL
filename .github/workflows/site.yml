name: Publish to site v0.0.0

on:
  release:
    types: [published]
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ver: 0.0.0-experimental+0-beta.10
  ver_tag: 0.0.0-experimental%2B0-beta.10
  file_ver: 0.0.0
  commit_msg: update

jobs:
  deploy:
    if: ${{ !contains(github.event.head_commit.message, '[n-site]') }}

    permissions:
      contents: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: download files
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir downloads
          cd downloads
          
          gh release download --repo TheUnknownGroup/UKMCL ${{ env.ver }} --pattern "UKMCL-Windows-Installer-en_US.exe"
          gh release download --repo TheUnknownGroup/UKMCL ${{ env.ver }} --pattern "UKMCL-macOS-en_US+${{ env.file_ver }}.dmg"
          gh release download --repo TheUnknownGroup/UKMCL ${{ env.ver }} --pattern "UKMCL-Linux-Installer-en_US+${{ env.file_ver }}.deb"

      - name: copy
        run: |
          git clone https://x-access-token:${{ secrets.WEBSITE_TOKEN }}@github.com/TheUnknownGroup/theunknowngroup.github.io.git repo
          cd repo/public/
          
          if [ -d "out" || -d "launcher"]; then
            echo "Exists"
          else
            mkdir -p out
            mkdir -p launcher
          fi
          
          if [ ! -f launcher/version-lin.json ]; then
            echo "[]" > launcher/version-lin.json          
          elif [ ! -f launcher/version-win.json ]; then
            echo "[]" > launcher/version-win.json          
          elif [ ! -f launcher/version-mac.json ]; then
            echo "[]" > launcher/version-mac.json
          fi
          
          cd ${{ github.workspace }}
          cp downloads/*.exe repo/public/out/
          cp downloads/*.deb repo/public/out/
          cp downloads/*.dmg repo/public/out/

      - name: new ver-lin
        if: ${{ contains(github.event.head_commit.message, '[newver]') }}
        run: |
          jq --arg version "${{ env.ver }}" \
             --arg changelog "https://github.com/TheUnknownGroup/UKMCL/releases/tag/${{ env.ver_tag }}" \
             --arg url "https://web.thegremlinx.xyz/out/UKMCL-Linux-Installer-en_US+${{ env.file_ver }}.deb" \
             '.[] += {
                version: $version,
                changelog: $changelog,
                download_url: $url
             }' > version-lin.json
          cp version-lin.json repo/public/launcher/

      - name: new ver-win
        if: ${{ contains(github.event.head_commit.message, '[newver]') }}
        run: |
          jq --arg version "${{ env.ver }}" \
             --arg changelog "https://github.com/TheUnknownGroup/UKMCL/releases/tag/${{ env.ver_tag }}" \
             --arg url "https://web.thegremlinx.xyz/out/UKMCL-Windows-Installer-en_US.exe" \
             '.[] += {
                version: $version,
                changelog: $changelog,
                download_url: $url
             ]' > version-win.json
          cp version-win.json repo/public/launcher/

      - name: new ver-mac
        if: ${{ contains(github.event.head_commit.message, '[newver]') }}
        run: |
          jq --arg version "${{ env.ver }}" \
             --arg changelog "https://github.com/TheUnknownGroup/UKMCL/releases/tag/${{ env.ver_tag }}" \
             --arg url "https://web.thegremlinx.xyz/out/UKMCL-macOS-en_US+${{ env.file_ver }}.dmg" \
             '.[] += {
                version: $version,
                changelog: $changelog,
                download_url: $url
             }' > version-mac.json
          cp version-mac.json repo/public/launcher/

      - name: make version-lin.json
        if: ${{ !contains(github.event.head_commit.message, '[newver]') }}
        run: |
          echo '{
             "versions": [
                 {
                     "version": "${{ env.ver }}",
                     "changelog": "https://github.com/TheUnknownGroup/UKMCL/releases/tag/${{ env.ver_tag }}",
                     "download_url": "https://web.thegremlinx.xyz/out/UKMCL-Linux-Installer-en_US+${{ env.file_ver }}.deb"
                 }
             ]
          }' > version-lin.json
          cp version-lin.json repo/public/launcher/

      - name: make version-win.json
        if: ${{ !contains(github.event.head_commit.message, '[newver]') }}
        run: |
          echo '{
             "versions": [
                 {
                     "version": "${{ env.ver }}",
                     "changelog": "https://github.com/TheUnknownGroup/UKMCL/releases/tag/${{ env.ver_tag }}",
                     "download_url": "https://web.thegremlinx.xyz/out/UKMCL-Windows-Installer-en_US.exe"
                 }
             ]
          }' > version-win.json
          cp version-win.json repo/public/launcher/

      - name: make version-mac.json
        if: ${{ !contains(github.event.head_commit.message, '[newver]') }}
        run: |
          echo '{
             "versions": [
                 {
                     "version": "${{ env.ver }}",
                     "changelog": "https://github.com/TheUnknownGroup/UKMCL/releases/tag/${{ env.ver_tag }}",
                     "download_url": "https://web.thegremlinx.xyz/out/UKMCL-macOS-en_US+${{ env.file_ver }}.dmg"
                 }
             ]
          }' > version-mac.json
          cp version-mac.json repo/public/launcher/

      - name: push to repo
        run: |
          cd repo/
          git config user.name "devonk15"
          git config user.email "94760159+devonk15@users.noreply.github.com"
          git add public/out/UKMCL-Windows-Installer-en_US.exe
          git add public/out/UKMCL-macOS-en_US+${{ env.file_ver }}.dmg
          git add public/out/UKMCL-Linux-Installer-en_US+${{ env.file_ver }}.deb
          git add public/launcher/*.json
          
          if git diff --cached --quiet; then
            echo "No changes"
          else
            git commit -m "${{ env.commit_msg }}"
            git push
          fi
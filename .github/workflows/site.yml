name: Deploy to Website

on:
  release:
    types: [published]
# testing purposes only
  push:
    branches:
      - main
  workflow_dispatch:

env:
  file_ver: 0.0.0
  ver: 0.0.0-experimental+0-beta.10-test
  ver_tag: 0.0.0-experimental%2B0-beta.10-test
  commit_msg: update
  url: https://github.com/TheUnknownGroup/UKMCL/releases/download/

jobs:
  deploy:
    if: ${{ !contains(github.event.head_commit.message, '[site]') }}

    permissions:
      contents: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: copy
        run: |
          git clone https://x-access-token:${{ secrets.WEBSITE_TOKEN }}@github.com/TheUnknownGroup/theunknowngroup.github.io.git repo
          cd repo/public/

          if [ -d "launcher" ]; then
            echo "Exists"
          else
            mkdir -p launcher
          fi

          if [ ! -f launcher/version-lin.json ]; then
            cd ${{ github.workspace }}/json
            echo '
            {
              "versions": []
            }' > version-lin.json
            cd ${{ github.workspace }}/repo/public/
          elif [ ! -f launcher/version-win.json ]; then
            cd ${{ github.workspace }}/json
            echo '
            {
              "versions": []
            }' > version-win.json
            cd ${{ github.workspace }}/repo/public/
          elif [ ! -f launcher/version-mac.json ]; then
            cd ${{ github.workspace }}/json
            echo '
            {
              "versions": []
            }' > version-mac.json
            cd ${{ github.workspace }}/repo/public/
          fi
          
          if [ -f ${{ github.workspace }}/json/version-lin.json ]; then
            cd ${{ github.workspace }}/json
            echo '
            {
              "versions": []
            }' > version-lin.json
            cd ${{ github.workspace }}/repo/public/          
          elif [ -f ${{ github.workspace }}/json/version-win.json ]; then
            cd ${{ github.workspace }}/json
            echo '
            {
              "versions": []
            }' > version-win.json
            cd ${{ github.workspace }}/repo/public/          
          elif [ -f ${{ github.workspace }}/json/version-mac.json ]; then
            cd ${{ github.workspace }}/json
            echo '
            {
              "versions": []
            }' > version-mac.json
            cd ${{ github.workspace }}/repo/public/
          fi
          
          cd ${{ github.workspace }}

      - name: get jq
        if: ${{ contains(github.event.head_commit.message, '[newver]') }}
        run: |
          sudo apt-get update
          sudo apt-get install jq

      - name: new ver-lin
        if: ${{ contains(github.event.head_commit.message, '[newver]') }}
        run: |
          jq --arg version "${{ env.ver }}" \
             --arg changelog "https://github.com/TheUnknownGroup/UKMCL/releases/tag/${{ env.ver_tag }}" \
             --arg url "${{ env.url }}${{ env.ver_tag }}/UKMCL-Linux-Installer-en_US+${{ env.file_ver }}.deb" \
             '.versions[]' json/tmp-lin.json > json/version-lin.json
          cp json/version-lin.json repo/public/launcher/

      - uses: actions/upload-artifact@v4
        with:
          name: test
          path: json/version-lin.json

#
#      - name: new ver-win
#        if: ${{ contains(github.event.head_commit.message, '[newver]') }}
#        run: |
#          jq --arg version "${{ env.ver }}" \
#             --arg changelog "https://github.com/TheUnknownGroup/UKMCL/releases/tag/${{ env.ver_tag }}" \
#             --arg url "${{ env.url }}${{ env.ver_tag }}/UKMCL-Windows-Installer-en_US.exe" \
#             '.versions[] += {
#                version: $version,
#                changelog: $changelog,
#                download_url: $url
#             ]' > version-win.json
#          cp version-win.json repo/public/launcher/
#
#      - name: new ver-mac
#        if: ${{ contains(github.event.head_commit.message, '[newver]') }}
#        run: |
#          jq --arg version "${{ env.ver }}" \
#             --arg changelog "https://github.com/TheUnknownGroup/UKMCL/releases/tag/${{ env.ver_tag }}" \
#             --arg url "${{ env.url }}${{ env.ver_tag }}/UKMCL-macOS-en_US+${{ env.file_ver }}.dmg" \
#             '.versions[] += {
#                version: $version,
#                changelog: $changelog,
#                download_url: $url
#             }' > version-mac.json
#          cp version-mac.json repo/public/launcher/
#
#      - name: make version-lin.json
#        if: ${{ !contains(github.event.head_commit.message, '[newver]') }}
#        run: |
#          echo '{
#              "versions": [
#                  {
#                      "version": "${{ env.ver }}",
#                      "changelog": "https://github.com/TheUnknownGroup/UKMCL/releases/tag/${{ env.ver_tag }}",
#                      "download_url": "${{ env.url }}${{ env.ver_tag }}/UKMCL-Linux-Installer-en_US+${{ env.file_ver }}.deb"
#                  }
#              ]
#          }' > version-lin.json
#
#      - name: make version-win.json
#        if: ${{ !contains(github.event.head_commit.message, '[newver]') }}
#        run: |
#          echo '{
#              "versions": [
#                  {
#                      "version": "${{ env.ver }}",
#                      "changelog": "https://github.com/TheUnknownGroup/UKMCL/releases/tag/${{ env.ver_tag }}",
#                      "download_url": "${{ env.url }}${{ env.ver_tag }}/UKMCL-Windows-Installer-en_US.exe"
#                  }
#              ]
#          }' > version-win.json
#          cp version-win.json repo/public/launcher/
#
#      - name: make version-mac.json
#        if: ${{ !contains(github.event.head_commit.message, '[newver]') }}
#        run: |
#          echo '{
#              "versions": [
#                  {
#                      "version": "${{ env.ver }}",
#                      "changelog": "https://github.com/TheUnknownGroup/UKMCL/releases/tag/${{ env.ver_tag }}",
#                      "download_url": "${{ env.url }}${{ env.ver_tag }}/UKMCL-macOS-en_US+${{ env.file_ver }}.dmg"
#                  }
#              ]
#          }' > version-mac.json
#          cp version-mac.json repo/public/launcher/
#
#      - name: push to repo
#        run: |
#          cd repo/
#          git config user.name "devonk15"
#          git config user.email "94760159+devonk15@users.noreply.github.com"
#          git add public/launcher/*.json
#
#          if git diff --cached --quiet; then
#            echo "No changes"
#          else
#            git commit -m "${{ env.commit_msg }}"
#            git push
#          fi
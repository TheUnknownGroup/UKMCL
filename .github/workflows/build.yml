name: Build UKMCL v0.0.0

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  java_ver: "19.0.2"
  ver: 0.0.0-experimental+0
  ver-exp: 0.0.0-experimental+0
  tag: "0.0.0-experimental+0"
  py_ver: "3.13.2"
  jar_ver: UKMCL-0.0.0+build.1.jar

jobs:
  buildWin:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    permissions:
      contents: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_ver }}
          distribution: "temurin"
          architecture: "x64"
          check-latest: true

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew build

      - name: build exe
        run: ./gradlew createExe

      - name: upload exe
        uses: actions/upload-artifact@v4
        with:
          name: exe
          path: build/libs/

  buildLin:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    permissions:
      contents: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_ver }}
          distribution: "temurin"
          architecture: "x64"
          check-latest: true

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew build

      - name: build installer
        run: |
          cd packaging
          mkdir -p usr/local/bin
          cd usr
          mkdir -p share
          mkdir -p share/UKMCL
          cd ${{ github.workspace }}
          cp build/libs/*.jar packaging/usr/share/UKMCL/
          sed -i 's/${VERSION}/${{ env.ver-exp }}/g' packaging/DEBIAN/control
          fakeroot dpkg-deb --build packaging "UKMCL-Linux-Installer-en_US.deb"

      - name: upload installer
        uses: actions/upload-artifact@v4
        with:
          name: deb
          path: UKMCL-Linux-Installer-en_US.deb


  buildMac:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    permissions:
      contents: write
      id-token: write

    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_ver }}
          distribution: "temurin"
          architecture: "x64"
          check-latest: true

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew build

      - name: build installer
        run: |
          mkdir -p output
          jpackage \
            -t dmg \
            --app-version "en_US" \
            --input build/libs \
            --dest output \
            --name "UKMCL-MacOS-Installer" \
            --main-jar ${{ env.jar_ver }} \
            --main-class UkmclMain \
            --icon ${{ github.workspace }}/assets/icon.icns \
            --java-options "-Xmx2G"

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: dmg
          path: output/*.dmg
          

  sign:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    permissions:
      contents: write
      id-token: write

    needs: [ buildWin, buildLin, buildMac ]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: download exe
        uses: actions/download-artifact@v4

      - name: py install
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.py_ver }}

      - name: verify py
        run: python --version

      - name: pip install
        shell: pwsh
        run: python -m ensurepip --upgrade

      - name: sign sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: | 
            exe/*.exe
            deb/*.deb
            dmg/*.dmg
          verify: true
          verify-cert-identity: https://github.com/TheUnknownGroup/UKMCL/.github/workflows/build.yml@refs/heads/main
          verify-oidc-issuer: https://token.actions.githubusercontent.com
#          upload-signing-artifacts: true

      - name: upload exe
        uses: actions/upload-artifact@v4
        with:
          name: sign-exe
          path: |
            exe/*.exe
            deb/*.deb
            dmg/*.dmg


  release:
    if: ${{ contains(github.event.head_commit.message, '[real]') }}

    permissions:
      contents: write

    needs: [ sign ]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: download files
        uses: actions/download-artifact@v4

      - name: create release
        uses: softprops/action-gh-release@v2
        with:
          name: UKMCL V${{ env.ver }}
          tag_name: ${{ env.tag }}
          body_path: ${{ github.workspace}}/changelog.md
          draft: true
          generate_release_notes: true
          files: |
            sign-exe/exe/*.exe
            sign-exe/dmg/*.dmg
            sign-exe/deb/*.deb
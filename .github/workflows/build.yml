name: Build UKMCL v0.0.0-experimental

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  java_ver: "19.0.2"
  ver: 0.0.0-experimental+0-beta.10-test
  py_ver: "3.13.2"
  jar_ver: UKMCL-0.0.0.jar
  file_ver: 0.0.0
  pre: true

jobs:
  buildWin:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    permissions:
      contents: write
      id-token: write

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_ver }}
          distribution: "temurin"
          architecture: "x64"
          check-latest: true

      - name: Install Dependencies - Windows
        run: |
          choco install visualstudio2019buildtools -y
          choco install visualstudio2019-workload-vctools -y

      - name: Set up Environment for Windows Build Tools
        run: |
          $env:Path += ";C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin"
          $env:Path += ";C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\Common7\IDE"
          $env:Path += ";C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Tools\MSVC\*\bin\Hostx64\x64"

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew build

      - name: build exe
        run: ./gradlew createExe

      - name: build installer
        run: |
          cd ${{ github.workspace }}/packaging/exe
          
          copy -r "${{ github.workspace }}/build/libs/*.exe"
          
          copy ${{ github.workspace }}/assets ./assets
          
          curl https://mlaan2.home.xs4all.nl/ispack/innosetup-6.2.1.exe --output innosetup.exe
          Start-Process .\innosetup.exe /VERYSILENT -Wait
          
          cd "C:\Program Files (x86)\Inno Setup 6"
          iscc "${{ github.workspace }}/packaging/exe/installer.iss"

      - name: upload exe
        uses: actions/upload-artifact@v4
        with:
          name: exe
          path: ${{ github.workspace }}/packaging/exe/UKMCL-Windows-Installer-en_US.exe

  buildLin:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    permissions:
      contents: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_ver }}
          distribution: "temurin"
          architecture: "x64"
          check-latest: true

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew build

      - name: build installer
        run: |
          cd packaging/deb/usr
          mkdir -p share/UKMCL
          cd ${{ github.workspace }}
          cp -r build/libs/*.jar packaging/deb/usr/share/UKMCL/
          sed -i 's/${VERSION}/${{ env.ver }}/g' packaging/deb/DEBIAN/control
          fakeroot dpkg-deb --build packaging/deb "UKMCL-Linux-Installer-en_US+${{ env.file_ver }}.deb"

      - name: upload installer
        uses: actions/upload-artifact@v4
        with:
          name: deb
          path: UKMCL-Linux-Installer-en_US+${{ env.file_ver }}.deb


  buildMac:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    permissions:
      contents: write
      id-token: write

    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_ver }}
          distribution: "temurin"
          architecture: "x64"
          check-latest: true

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew build

      - name: build installer
        run: |
          mkdir -p output
          jpackage \
            -t dmg \
            --input build/libs \
            --dest output \
            --name "UKMCL-Installer" \
            --main-jar ${{ env.jar_ver }} \
            --main-class UkmclMain \
            --icon ${{ github.workspace }}/assets/icon.icns \
            --java-options "-Xmx2G"
          
          mv output/UKMCL-Installer-1.0.dmg output/UKMCL-macOS-en_US+${{ env.file_ver }}.dmg

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: dmg
          path: output/*.dmg
          

  sign:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    permissions:
      contents: write
      id-token: write

    needs: [ buildWin, buildLin, buildMac ]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: download exe
        uses: actions/download-artifact@v4

      - name: py install
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.py_ver }}

      - name: verify py
        run: python --version

      - name: pip install
        shell: pwsh
        run: python -m ensurepip --upgrade

      - name: sign sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: | 
            exe/*.exe
            deb/*.deb
            dmg/*.dmg
          verify: true
          verify-cert-identity: https://github.com/TheUnknownGroup/UKMCL/.github/workflows/build.yml@refs/heads/main
          verify-oidc-issuer: https://token.actions.githubusercontent.com
          upload-signing-artifacts: true


  release:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    permissions:
      contents: write

    needs: [ sign ]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: download files
        uses: actions/download-artifact@v4
        with:
          path: signing-artifacts-sign

      - run: |
          mkdir out
          cp signing-artifacts-sign/exe/*.exe out/
          cp signing-artifacts-sign/deb/*.deb out/
          cp signing-artifacts-sign/dmg/*.dmg out/

      - name: create release
        uses: softprops/action-gh-release@v2
        with:
          name: UKMCL V${{ env.ver }}
          tag_name: ${{ env.ver }}
          body_path: ${{ github.workspace }}/changelog.md
          generate_release_notes: true
          prerelease: ${{ env.pre }}
          files: |
            out/*.exe
            out/*.dmg
            out/*.deb

  push:
    if: ${{ !contains(github.event.head_commit.message, '[site]') }}

    permissions:
      contents: write
      id-token: write

    env:
      commit_msg: update [site] [newver]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: site

      - name: switch
        run: |
          git config user.name "devonk15"
          git config user.email "94760159+devonk15@users.noreply.github.com"
          
          echo 'start' > new.txt
          
          git add new.txt
          git commit -m "${{ env.commit_msg }}"
          git push
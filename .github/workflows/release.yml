name: Build UKMCL

on:
  push:
    branches:
      - main

jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}
    permissions:
      contents: write

    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4.2.0
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.0"

      - name: Install Dependencies - Linux
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build clang cmake libgtk-3-dev
      
      - name: Install Dependencies - Windows
        if: matrix.platform == 'windows-latest'
        run: |
          choco install visualstudio2019buildtools -y
          choco install visualstudio2019-workload-vctools -y

      - name: Set up Environment for Windows Build Tools
        if: matrix.platform == 'windows-latest'
        run: |
          $env:Path += ";C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin"
          $env:Path += ";C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\Common7\IDE"
          $env:Path += ";C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Tools\MSVC\*\bin\Hostx64\x64"

      - name: Build Linux
        if: matrix.platform == 'ubuntu-latest'
        run: flutter build linux

      - name: Build Windows
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: |
          flutter config --enable-windows-desktop
          flutter create .
          flutter pub get
          flutter build windows --release

      - name: Debug Build
        if: matrix.platform == 'windows-latest'
        run: |
          echo "Listing build output: "
          dir build\windows\x64\runner\Release\

      - name: Build macOS
        if: matrix.platform == 'macos-latest'
        run: |
          flutter pub get
          flutter build macos

      - name: Package Installer - Linux
        if: matrix.platform == 'ubuntu-latest'
        run: |
          mkdir -p ukmcl/DEBIAN ukmcl/usr/bin
          echo "Package: ukmcl
          Version: 0.0.0
          Section: utils
          Priority: optional
          Architecture: amd64
          Maintainer: TheGremlinX <owner@thegremlinx.xyz>
          Description: 
            This is the Minecraft Launcher for and by the Unknown Group." > ukmcl/DEBIAN/control
          cp -r build/linux/x64/release/bundle/* ukmcl/usr/bin
          dpkg-deb --build ukmcl
          mv ukmcl.deb UKMCL-Linux-Installer-en_US.deb

      - name: Package Installer - Windows
        if: matrix.platform == 'windows-latest'
        run: |
          choco install nsis -y
          echo '
          OutFile "UKMCL-Installer.exe"
          InstallDir "$PROGRAMFILES\\UKMCL"
          RequestExecutionLevel admin
          Page directory
          Page instfiles
          Section "Install"
            SetOutPath "$INSTDIR"
            File /r "build\\windows\\x64\\runner\\Release\\ukmcl.exe"
            CreateShortCut "$DESKTOP\\UKMCL.lnk" "$INSTDIR\\ukmcl.exe"
            CreateShortCut "$SYPROGRAMS\\UKMCL\\UKMCL.lnk" "$INSTDIR\\ukmcl.exe"
          SectionEnd
          Section "Uninstall"
            Delete "$INSTDIR\\*.*"
            RMDir "$INSTDIR"
            Delete "$DESKTOP\\UKMCL.lnk"
            Delete "$SYPROGRAMS\\UKMCL\\UKMCL.lnk"
            RMDir "$SYPROGRAMS\\UKMCL"
          SectionEnd
          ' > installer.nsi
          makensis installer.nsi
          mv UKMCL-Installer.exe UKMCL-Windows-Installer-en_US.exe
    
      - name: Packager Installer - macOS
        if: matrix.platform == 'macos-latest'
        run: |
          brew install create-dmg
          create-dmg \
            --volname "UKMCL Installer" \
            --window-pos 0.5 0.5 \
            --window-size 950 530 \
            --icon-size 100 \
            --icon "UKMCL.app" 200 190 \
            --hide-extension "UKMCL.app" \
            --app-drop-link 600 185 \
            "UKMCL.dmg" \
            "build/macos/Build/Products/Release/"
          mv UKMCL.dmg UKMCL-macOS-Installer-en_US.dmg

  release:
    permissions:
      contents: write

    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}
    needs: ["build"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.0
      - uses: dart-lang/setup-dart@v1.7.0

      - name: Download Artifact - Linux
        uses: actions/download-artifact@v4
        with:
          name: UKMCL-Linux-Installer-en_US
          path: build/linux/x64/release/bundle/UKMCL-Linux-Installer-en_US.deb

      - name: Download Artifact - Windows
        uses: actions/download-artifact@v4
        with:
          name: UKMCL-Windows-Installer-en_US
          path: build/windows/x64/runner/Release/UKMCL-Windows-Installer-en_US.exe

      - name: Download Artifact - macOS
        uses: actions/download-artifact@v4
        with:
          name: UKMCL-macOS-Installer-en_US
          path: build/acos/Build/Products/Release/UKMCL-macOS-Installer-en_US.dmg

      - name: Upload Artifact - Linux
        uses: actions/upload-artifact@v4.5.0
        with:
          name: UKMCL-Linux-Installer-en_US
          path: build/linux/x64/release/bundle/UKMCL-Linux-Installer-en_US.deb

      - name: Upload Artifact - Windows
        uses: actions/upload-artifact@v4.5.0
        with:
          name: UKMCL-Windows-Installer-en_US
          path: build/windows/x64/runner/Release/UKMCL-Windows-Installer-en_US.exe

      - name: Upload Artifact - macOS
        uses: actions/upload-artifact@v4.5.0
        with:
          name: UKMCL-macOS-Installer-en_US
          path: build/acos/Build/Products/Release/UKMCL-macOS-Installer-en_US.dmg

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@v1.2.0"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          title: "UKMCL"
          automatic_release_tag: "v0.0.0-experimental+0"
          prerelease: true
          draft: true
          files: |
            UKMCL-Linux-Installer-en_US.deb
            UKMCL-Windows-Installer-en_US.exe
            UKMCL-macOS-Installer-en_US.dmg


      # - name: Create Release
      #   uses: actions/create-release@v1
      #   with:
      #     owner: TheUnknownGroup
      #     repo: UKMCL
      #     tag_name: "v0.0.0-experimental"
      #     release_name: "UKMCL v0.0.0 Experimental"
      #     body: |
      #       First Version that serves as a test
      #     draft: true
      #     prerelease: true

        

# name: Build Flutter desktop apps

# on:
#     push:
#         branches:
#             - main

# jobs:
#     build:
#         runs-on: ${{ matrix.os }}
#         strategy:
#             matrix:
#                 os: [ubuntu-latest, macos-latest, windows-latest]

#         steps:
#             - uses: actions/checkout@v3
#             - name: Set up Flutter
#               uses: subosito/flutter-action@v2
#               with:
#                 flutter-version: "3.27.0"

#             - name: Install Linux Build Dependencies
#               if: matrix.os == 'ubuntu-latest'
#               run: |
#                 sudo apt-get update
#                 sudo apt-get install -y ninja-build clang cmake libgtk-3-dev

#             # - name: Install Xcode Command Line Tools
#             #   if: matrix.os == 'macos-latest'
#             #   run: xcode-select --install

#             - name: Install Windows Build Tools
#               if: matrix.os == 'windows-latest'
#               run: |
#                 choco install visualstudio2019buildtools -y
#                 choco install visualstudio2019-workload-vctools -y

#             - name: Set up Environment for Windows Build Tools
#               if: matrix.os == 'windows-latest'
#               run: |
#                 $env:Path += ";C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin"
#                 $env:Path += ";C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\Common7\IDE"
#                 $env:Path += ";C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Tools\MSVC\*\bin\Hostx64\x64"

#             - name: Install Dependencies
#               run: flutter pub get

#             - name: Build Windows App
#               if: matrix.os == 'windows-latest'
#               shell: pwsh
#               run: flutter build windows

#             - name: Build Linux App
#               if: matrix.os == 'ubuntu-latest'
#               run: flutter build linux

#             - name: Build macOS App
#               if: matrix.os == 'macos-latest'
#               run: flutter build macos
            
#             - name: Upload Artifacts
#               uses: actions/upload-artifact@v3
#               with:
#                 name: build-${{ matrix.os }}
#                 path: |
#                     build/windows/runner/Release/*.exe
#                     build/macos/Build/Products/Release/*.app
#                     build/linux/runner/*.AppImage
#     release:
#         env:
#           NAME: "UKMCL"
#           VERSION: "0.0.0"
#           NUM: "+0"
#           EXP: "experimental"
#           TAG: "v${{ vars.VERSION }}${{ vars.NUM }}"
#           EXP_TAG: "v${{ vars.TAG }}-${{ vars.EXP }}${{ vars.NUM }}"

#         permissions:
#           contents: write
#         needs: build
#         runs-on: ubuntu-latest
#         steps:
#             - uses: actions/checkout@v3
#             - name: Download Build Artifacts
#               uses: actions/download-artifact@v3
#               with:
#                 path: ./artifacts

#             - name: Create Release & Upload
#               uses: "marvinpinto/action-automatic-releases@latest"
#               with:
#                 repo_token: "${{ secrets.GITHUB_TOKEN }}"
#                 prerelease: true
#                 draft: true
#                 automatic_release_tag: "${{ env.EXP_TAG }}"
#                 title: "${{ env.NAME }} ${{ env.EXP_TAG }}"
#                 files:
#                   ukmcl.exe
#                   ukmcl.AppImage
#                   ukmcl.deb
#                   ukmcl.zip
#                   ukmcl.dmg
#             # - name: Create Github Release
#             #   uses: actions/create-release@v1
#             #   env:
#             #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#             #   with:
#             #     tag_name: v0.0.0-experimental+0
#             #     release_name: UKMCL v0.0.0 Experimental
#             #     body: |
#             #         This is the first release of the Minecraft Launcher: UKMCL using Github Actions and created using Flutter
#             #     draft: false
#             #     prerelease: false

#             # - name: Upload Release Assets
#             #   uses: actions/upload-release-asset@v1
#             #   with:
#             #     upload_url: ${{ steps.create-release.outputs.upload_url }}
#             #     asset_path: ./artifacts
#             #     asset_name: ${{ matrix.os }}-build.zip
#             #     asset_content_type: applization/zip